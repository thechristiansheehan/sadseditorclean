{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flame\\\\sadseditor\\\\sadseditor\\\\client\\\\src\\\\Resources.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  _s();\n  const [textInput, setTextInput] = useState(\"\");\n  const [file, setFile] = useState(null); // optional image\n  const [message, setMessage] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) setFile(selectedFile);\n  };\n  const handleUpload = async () => {\n    if (!textInput.trim()) {\n      setMessage(\"Please enter text to upload.\");\n      return;\n    }\n    const formData = new FormData();\n\n    // Always add text file\n    const textBlob = new Blob([textInput], {\n      type: \"text/plain\"\n    });\n    formData.append(\"textfile\", new File([textBlob], \"textfile.txt\", {\n      type: \"text/plain\"\n    }));\n\n    // Optionally add image\n    if (file) formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(`Upload successful: ${data.textfile}${data.image ? ` + ${data.image}` : \"\"}`);\n        setTextInput(\"\");\n        setFile(null);\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n      } else {\n        setMessage(`Upload failed: ${data.message}`);\n      }\n    } catch (err) {\n      setMessage(`Upload failed: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      backgroundColor: \"#252525\",\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Write text here...\",\n      value: textInput,\n      onChange: e => setTextInput(e.target.value),\n      style: {\n        width: \"400px\",\n        height: \"100px\",\n        marginBottom: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/jpeg,.jpg\",\n      onChange: handleFileChange,\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Resources, \"1n+tu8cifbnzFxMdrentGtmHmt4=\");\n_c = Resources;\nexport default Resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Resources","_s","textInput","setTextInput","file","setFile","message","setMessage","fileInputRef","handleFileChange","e","selectedFile","target","files","handleUpload","trim","formData","FormData","textBlob","Blob","type","append","File","response","fetch","method","body","data","json","ok","textfile","image","current","value","err","style","padding","backgroundColor","color","children","placeholder","onChange","width","height","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","accept","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Flame/sadseditor/sadseditor/client/src/Resources.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nfunction Resources() {\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [file, setFile] = useState(null); // optional image\r\n  const [message, setMessage] = useState(\"\");\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) setFile(selectedFile);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!textInput.trim()) {\r\n      setMessage(\"Please enter text to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    // Always add text file\r\n    const textBlob = new Blob([textInput], { type: \"text/plain\" });\r\n    formData.append(\"textfile\", new File([textBlob], \"textfile.txt\", { type: \"text/plain\" }));\r\n\r\n    // Optionally add image\r\n    if (file) formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(`Upload successful: ${data.textfile}${data.image ? ` + ${data.image}` : \"\"}`);\r\n        setTextInput(\"\");\r\n        setFile(null);\r\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n      } else {\r\n        setMessage(`Upload failed: ${data.message}`);\r\n      }\r\n    } catch (err) {\r\n      setMessage(`Upload failed: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, backgroundColor: \"#252525\", color: \"white\" }}>\r\n      <textarea\r\n        placeholder=\"Write text here...\"\r\n        value={textInput}\r\n        onChange={(e) => setTextInput(e.target.value)}\r\n        style={{ width: \"400px\", height: \"100px\", marginBottom: 10 }}\r\n      />\r\n      <input type=\"file\" accept=\"image/jpeg,.jpg\" onChange={handleFileChange} ref={fileInputRef} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}