{"ast":null,"code":"\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\nvar bomHandling = require(\"./bom-handling\");\nvar mergeModules = require(\"./helpers/merge-exports\");\nvar iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\n// Cannot initialize with { __proto__: null } because Boolean({ __proto__: null }) === true\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = \"�\";\niconv.defaultCharSingleByte = \"?\";\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n  str = \"\" + (str || \"\"); // Ensure string.\n\n  var encoder = iconv.getEncoder(encoding, options);\n  var res = encoder.write(str);\n  var trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\niconv.decode = function decode(buf, encoding, options) {\n  if (typeof buf === \"string\") {\n    if (!iconv.skipDecodeWarning) {\n      console.error(\"Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding\");\n      iconv.skipDecodeWarning = true;\n    }\n    buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n  }\n  var decoder = iconv.getDecoder(encoding, options);\n  var res = decoder.write(buf);\n  var trail = decoder.end();\n  return trail ? res + trail : res;\n};\niconv.encodingExists = function encodingExists(enc) {\n  try {\n    iconv.getCodec(enc);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {\n  __proto__: null\n};\niconv.getCodec = function getCodec(encoding) {\n  if (!iconv.encodings) {\n    var raw = require(\"../encodings\");\n    // TODO: In future versions when old nodejs support is removed can use object.assign\n    iconv.encodings = {\n      __proto__: null\n    }; // Initialize as empty object.\n    mergeModules(iconv.encodings, raw);\n  }\n\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  var enc = iconv._canonicalizeEncoding(encoding);\n\n  // Traverse iconv.encodings to find actual codec.\n  var codecOptions = {};\n  while (true) {\n    var codec = iconv._codecDataCache[enc];\n    if (codec) {\n      return codec;\n    }\n    var codecDef = iconv.encodings[enc];\n    switch (typeof codecDef) {\n      case \"string\":\n        // Direct alias to other encoding.\n        enc = codecDef;\n        break;\n      case \"object\":\n        // Alias with options. Can be layered.\n        for (var key in codecDef) {\n          codecOptions[key] = codecDef[key];\n        }\n        if (!codecOptions.encodingName) {\n          codecOptions.encodingName = enc;\n        }\n        enc = codecDef.type;\n        break;\n      case \"function\":\n        // Codec itself.\n        if (!codecOptions.encodingName) {\n          codecOptions.encodingName = enc;\n        }\n\n        // The codec function must load all tables and return object with .encoder and .decoder methods.\n        // It'll be called only once (for each different options object).\n        //\n        codec = new codecDef(codecOptions, iconv);\n        iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n        return codec;\n      default:\n        throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\");\n    }\n  }\n};\niconv._canonicalizeEncoding = function (encoding) {\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  return (\"\" + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n};\niconv.getEncoder = function getEncoder(encoding, options) {\n  var codec = iconv.getCodec(encoding);\n  var encoder = new codec.encoder(options, codec);\n  if (codec.bomAware && options && options.addBOM) {\n    encoder = new bomHandling.PrependBOM(encoder, options);\n  }\n  return encoder;\n};\niconv.getDecoder = function getDecoder(encoding, options) {\n  var codec = iconv.getCodec(encoding);\n  var decoder = new codec.decoder(options, codec);\n  if (codec.bomAware && !(options && options.stripBOM === false)) {\n    decoder = new bomHandling.StripBOM(decoder, options);\n  }\n  return decoder;\n};\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(streamModule) {\n  if (iconv.supportsStreams) {\n    return;\n  }\n\n  // Dependency-inject stream module to create IconvLite stream classes.\n  var streams = require(\"./streams\")(streamModule);\n\n  // Not public API yet, but expose the stream classes.\n  iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n  iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n  // Streaming API.\n  iconv.encodeStream = function encodeStream(encoding, options) {\n    return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n  };\n  iconv.decodeStream = function decodeStream(encoding, options) {\n    return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n  };\n  iconv.supportsStreams = true;\n};\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar streamModule;\ntry {\n  streamModule = require(\"stream\");\n} catch (e) {}\nif (streamModule && streamModule.Transform) {\n  iconv.enableStreamingAPI(streamModule);\n} else {\n  // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n  iconv.encodeStream = iconv.decodeStream = function () {\n    throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n  };\n}\n\n// Some environments, such as browsers, may not load JavaScript files as UTF-8\n// eslint-disable-next-line no-constant-condition\nif (\"Ā\" !== \"\\u0100\") {\n  console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}","map":{"version":3,"names":["Buffer","require","bomHandling","mergeModules","iconv","module","exports","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","encoding","options","encoder","getEncoder","res","write","trail","end","length","concat","decode","buf","skipDecodeWarning","console","error","from","decoder","getDecoder","encodingExists","enc","getCodec","e","toEncoding","fromEncoding","_codecDataCache","__proto__","raw","_canonicalizeEncoding","codecOptions","codec","codecDef","key","encodingName","type","Error","toLowerCase","replace","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","enableStreamingAPI","streamModule","supportsStreams","streams","IconvLiteEncoderStream","IconvLiteDecoderStream","encodeStream","decodeStream","Transform"],"sources":["C:/Users/Flame/sadseditor/sadseditor/client/node_modules/raw-body/node_modules/iconv-lite/lib/index.js"],"sourcesContent":["\"use strict\"\n\nvar Buffer = require(\"safer-buffer\").Buffer\n\nvar bomHandling = require(\"./bom-handling\")\nvar mergeModules = require(\"./helpers/merge-exports\")\nvar iconv = module.exports\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\n// Cannot initialize with { __proto__: null } because Boolean({ __proto__: null }) === true\niconv.encodings = null\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = \"�\"\niconv.defaultCharSingleByte = \"?\"\n\n// Public API.\niconv.encode = function encode (str, encoding, options) {\n  str = \"\" + (str || \"\") // Ensure string.\n\n  var encoder = iconv.getEncoder(encoding, options)\n\n  var res = encoder.write(str)\n  var trail = encoder.end()\n\n  return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res\n}\n\niconv.decode = function decode (buf, encoding, options) {\n  if (typeof buf === \"string\") {\n    if (!iconv.skipDecodeWarning) {\n      console.error(\"Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding\")\n      iconv.skipDecodeWarning = true\n    }\n\n    buf = Buffer.from(\"\" + (buf || \"\"), \"binary\") // Ensure buffer.\n  }\n\n  var decoder = iconv.getDecoder(encoding, options)\n\n  var res = decoder.write(buf)\n  var trail = decoder.end()\n\n  return trail ? (res + trail) : res\n}\n\niconv.encodingExists = function encodingExists (enc) {\n  try {\n    iconv.getCodec(enc)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode\niconv.fromEncoding = iconv.decode\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = { __proto__: null }\n\niconv.getCodec = function getCodec (encoding) {\n  if (!iconv.encodings) {\n    var raw = require(\"../encodings\")\n    // TODO: In future versions when old nodejs support is removed can use object.assign\n    iconv.encodings = { __proto__: null } // Initialize as empty object.\n    mergeModules(iconv.encodings, raw)\n  }\n\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  var enc = iconv._canonicalizeEncoding(encoding)\n\n  // Traverse iconv.encodings to find actual codec.\n  var codecOptions = {}\n  while (true) {\n    var codec = iconv._codecDataCache[enc]\n\n    if (codec) { return codec }\n\n    var codecDef = iconv.encodings[enc]\n\n    switch (typeof codecDef) {\n      case \"string\": // Direct alias to other encoding.\n        enc = codecDef\n        break\n\n      case \"object\": // Alias with options. Can be layered.\n        for (var key in codecDef) { codecOptions[key] = codecDef[key] }\n\n        if (!codecOptions.encodingName) { codecOptions.encodingName = enc }\n\n        enc = codecDef.type\n        break\n\n      case \"function\": // Codec itself.\n        if (!codecOptions.encodingName) { codecOptions.encodingName = enc }\n\n        // The codec function must load all tables and return object with .encoder and .decoder methods.\n        // It'll be called only once (for each different options object).\n        //\n        codec = new codecDef(codecOptions, iconv)\n\n        iconv._codecDataCache[codecOptions.encodingName] = codec // Save it to be reused later.\n        return codec\n\n      default:\n        throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\")\n    }\n  }\n}\n\niconv._canonicalizeEncoding = function (encoding) {\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  return (\"\" + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\")\n}\n\niconv.getEncoder = function getEncoder (encoding, options) {\n  var codec = iconv.getCodec(encoding)\n  var encoder = new codec.encoder(options, codec)\n\n  if (codec.bomAware && options && options.addBOM) { encoder = new bomHandling.PrependBOM(encoder, options) }\n\n  return encoder\n}\n\niconv.getDecoder = function getDecoder (encoding, options) {\n  var codec = iconv.getCodec(encoding)\n  var decoder = new codec.decoder(options, codec)\n\n  if (codec.bomAware && !(options && options.stripBOM === false)) { decoder = new bomHandling.StripBOM(decoder, options) }\n\n  return decoder\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI (streamModule) {\n  if (iconv.supportsStreams) { return }\n\n  // Dependency-inject stream module to create IconvLite stream classes.\n  var streams = require(\"./streams\")(streamModule)\n\n  // Not public API yet, but expose the stream classes.\n  iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream\n  iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream\n\n  // Streaming API.\n  iconv.encodeStream = function encodeStream (encoding, options) {\n    return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options)\n  }\n\n  iconv.decodeStream = function decodeStream (encoding, options) {\n    return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options)\n  }\n\n  iconv.supportsStreams = true\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar streamModule\ntry {\n  streamModule = require(\"stream\")\n} catch (e) {}\n\nif (streamModule && streamModule.Transform) {\n  iconv.enableStreamingAPI(streamModule)\n} else {\n  // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n  iconv.encodeStream = iconv.decodeStream = function () {\n    throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\")\n  }\n}\n\n// Some environments, such as browsers, may not load JavaScript files as UTF-8\n// eslint-disable-next-line no-constant-condition\nif (\"Ā\" !== \"\\u0100\") {\n  console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\")\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}