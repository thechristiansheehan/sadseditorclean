{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flame\\\\sadseditor\\\\sadseditor\\\\client\\\\src\\\\Resources.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  _s();\n  const [file, setFile] = useState(null); // optional image\n  const [textInput, setTextInput] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const handleUpload = async () => {\n    if (!textInput.trim()) {\n      setMessage(\"Please enter text to upload.\");\n      return;\n    }\n    const formData = new FormData();\n\n    // required text file\n    const textBlob = new Blob([textInput], {\n      type: \"text/plain\"\n    });\n    formData.append(\"textfile\", new File([textBlob], \"textfile.txt\"));\n\n    // optional image\n    if (file) formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        setMessage(\"Upload failed: \" + text);\n        return;\n      }\n      const data = await response.json();\n      setMessage(\"Upload successful: \" + JSON.stringify(data));\n      setTextInput(\"\");\n      setFile(null);\n      if (fileInputRef.current) fileInputRef.current.value = \"\";\n    } catch (err) {\n      setMessage(\"Upload failed: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      backgroundColor: \"#252525\",\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textInput,\n      onChange: e => setTextInput(e.target.value),\n      placeholder: \"Write text here...\",\n      style: {\n        width: \"100%\",\n        height: 50,\n        marginBottom: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/jpeg,.jpg\",\n      onChange: e => setFile(e.target.files[0]),\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: 10\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Resources, \"zaHj10Ouf0jXvra4D432DPNUKKg=\");\n_c = Resources;\nexport default Resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Resources","_s","file","setFile","textInput","setTextInput","message","setMessage","fileInputRef","handleUpload","trim","formData","FormData","textBlob","Blob","type","append","File","response","fetch","method","body","ok","text","data","json","JSON","stringify","current","value","err","style","padding","backgroundColor","color","children","onChange","e","target","placeholder","width","height","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","accept","files","ref","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Flame/sadseditor/sadseditor/client/src/Resources.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Resources() {\r\n  const [file, setFile] = useState(null); // optional image\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!textInput.trim()) {\r\n      setMessage(\"Please enter text to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    // required text file\r\n    const textBlob = new Blob([textInput], { type: \"text/plain\" });\r\n    formData.append(\"textfile\", new File([textBlob], \"textfile.txt\"));\r\n\r\n    // optional image\r\n    if (file) formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const text = await response.text();\r\n        setMessage(\"Upload failed: \" + text);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(\"Upload successful: \" + JSON.stringify(data));\r\n      setTextInput(\"\");\r\n      setFile(null);\r\n      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n    } catch (err) {\r\n      setMessage(\"Upload failed: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, backgroundColor: \"#252525\", color: \"white\" }}>\r\n      <textarea\r\n        value={textInput}\r\n        onChange={(e) => setTextInput(e.target.value)}\r\n        placeholder=\"Write text here...\"\r\n        style={{ width: \"100%\", height: 50, marginBottom: 10 }}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/jpeg,.jpg\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n        ref={fileInputRef}\r\n      />\r\n      <button onClick={handleUpload} style={{ marginLeft: 10 }}>\r\n        Upload\r\n      </button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}