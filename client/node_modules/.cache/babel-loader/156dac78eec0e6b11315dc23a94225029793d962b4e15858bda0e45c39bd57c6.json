{"ast":null,"code":"\"use strict\";\n\nvar BOMChar = \"\\uFEFF\";\nexports.PrependBOM = PrependBOMWrapper;\nfunction PrependBOMWrapper(encoder, options) {\n  this.encoder = encoder;\n  this.addBOM = true;\n}\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str;\n    this.addBOM = false;\n  }\n  return this.encoder.write(str);\n};\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end();\n};\n\n// ------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n  this.decoder = decoder;\n  this.pass = false;\n  this.options = options || {};\n}\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf);\n  if (this.pass || !res) {\n    return res;\n  }\n  if (res[0] === BOMChar) {\n    res = res.slice(1);\n    if (typeof this.options.stripBOM === \"function\") {\n      this.options.stripBOM();\n    }\n  }\n  this.pass = true;\n  return res;\n};\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end();\n};","map":{"version":3,"names":["BOMChar","exports","PrependBOM","PrependBOMWrapper","encoder","options","addBOM","prototype","write","str","end","StripBOM","StripBOMWrapper","decoder","pass","buf","res","slice","stripBOM"],"sources":["C:/Users/Flame/sadseditor/sadseditor/client/node_modules/raw-body/node_modules/iconv-lite/lib/bom-handling.js"],"sourcesContent":["\"use strict\"\n\nvar BOMChar = \"\\uFEFF\"\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper (encoder, options) {\n  this.encoder = encoder\n  this.addBOM = true\n}\n\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str\n    this.addBOM = false\n  }\n\n  return this.encoder.write(str)\n}\n\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end()\n}\n\n// ------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper\nfunction StripBOMWrapper (decoder, options) {\n  this.decoder = decoder\n  this.pass = false\n  this.options = options || {}\n}\n\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf)\n  if (this.pass || !res) { return res }\n\n  if (res[0] === BOMChar) {\n    res = res.slice(1)\n    if (typeof this.options.stripBOM === \"function\") { this.options.stripBOM() }\n  }\n\n  this.pass = true\n  return res\n}\n\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end()\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,QAAQ;AAEtBC,OAAO,CAACC,UAAU,GAAGC,iBAAiB;AACtC,SAASA,iBAAiBA,CAAEC,OAAO,EAAEC,OAAO,EAAE;EAC5C,IAAI,CAACD,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACE,MAAM,GAAG,IAAI;AACpB;AAEAH,iBAAiB,CAACI,SAAS,CAACC,KAAK,GAAG,UAAUC,GAAG,EAAE;EACjD,IAAI,IAAI,CAACH,MAAM,EAAE;IACfG,GAAG,GAAGT,OAAO,GAAGS,GAAG;IACnB,IAAI,CAACH,MAAM,GAAG,KAAK;EACrB;EAEA,OAAO,IAAI,CAACF,OAAO,CAACI,KAAK,CAACC,GAAG,CAAC;AAChC,CAAC;AAEDN,iBAAiB,CAACI,SAAS,CAACG,GAAG,GAAG,YAAY;EAC5C,OAAO,IAAI,CAACN,OAAO,CAACM,GAAG,CAAC,CAAC;AAC3B,CAAC;;AAED;;AAEAT,OAAO,CAACU,QAAQ,GAAGC,eAAe;AAClC,SAASA,eAAeA,CAAEC,OAAO,EAAER,OAAO,EAAE;EAC1C,IAAI,CAACQ,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,IAAI,GAAG,KAAK;EACjB,IAAI,CAACT,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;AAC9B;AAEAO,eAAe,CAACL,SAAS,CAACC,KAAK,GAAG,UAAUO,GAAG,EAAE;EAC/C,IAAIC,GAAG,GAAG,IAAI,CAACH,OAAO,CAACL,KAAK,CAACO,GAAG,CAAC;EACjC,IAAI,IAAI,CAACD,IAAI,IAAI,CAACE,GAAG,EAAE;IAAE,OAAOA,GAAG;EAAC;EAEpC,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAKhB,OAAO,EAAE;IACtBgB,GAAG,GAAGA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;IAClB,IAAI,OAAO,IAAI,CAACZ,OAAO,CAACa,QAAQ,KAAK,UAAU,EAAE;MAAE,IAAI,CAACb,OAAO,CAACa,QAAQ,CAAC,CAAC;IAAC;EAC7E;EAEA,IAAI,CAACJ,IAAI,GAAG,IAAI;EAChB,OAAOE,GAAG;AACZ,CAAC;AAEDJ,eAAe,CAACL,SAAS,CAACG,GAAG,GAAG,YAAY;EAC1C,OAAO,IAAI,CAACG,OAAO,CAACH,GAAG,CAAC,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}